# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install curl and other dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          make create-sshkey

      # Runs a set of commands using the runners shell
      - name: Setup env vars and tree
        shell: bash
        env:
          SUPER_SECRET: ${{ secrets.OPENSTACK_CONFIG }}
        run: |
          echo "$SUPER_SECRET" >> ./terraform/openstack/main.tf

      # Layer 1 syntax check
      - name: Layer 1 Test 1 - make plan Terraform syntax checks
        run: make plan ENV=openstack
        
      # Check syntax in apps/docker_files -- Just the docker_compose.yml?
      
      # Can we check requirements, code, packages, etc for best practices?
      
      # Is this where we start with inspec?
        
      - name: Build Stack
        run: | 
          make auto-apply ENV=openstack
          echo "PUBIP=$(make get-public-ip ENV=openstack)" >> $GITHUB_ENV
      
      # Install Inspec on remote server
      - name: Build Stack - Install Inspec on remote host
        run: |
          ssh -o StrictHostKeyChecking=no -i key/id_rsa ubuntu@${{ env.PUBIP }} sudo apt-get update
          ssh -o StrictHostKeyChecking=no -i key/id_rsa ubuntu@${{ env.PUBIP }} sudo apt-get -y install ruby ruby-dev gcc g++ make
          ssh -o StrictHostKeyChecking=no -i key/id_rsa ubuntu@${{ env.PUBIP }} sudo gem install inspec

      # Layer 2 Unit Tests
      - name: Layer 2 Test 1 - curl polls
        run: curl -q http://${{ env.PUBIP }}/polls/

      - name: Layer 2 Test 2 - Check running docker containers
        run: ssh -o StrictHostKeyChecking=no -i key/id_rsa ubuntu@${{ env.PUBIP }} sudo docker ps

      - name: Layer 2 Test 3 - Example Inspec test of postgres container
        run: ssh -o StrictHostKeyChecking=no -i key/id_rsa ubuntu@${{ env.PUBIP }} inspec exec https://github.com/dev-sec/linux-baseline -t docker://postgres

      # Layer 3 End to End
      # We need to loop in terratest I think

      # End -- Teardown environment
      - name: Teardown
        if: always()
        run: make destroy ENV=openstack
